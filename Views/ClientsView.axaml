<UserControl
    x:Class="CustomerDemo.Views.ClientsView"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
    xmlns:iac="clr-namespace:Avalonia.Xaml.Interactions.Custom;assembly=Avalonia.Xaml.Interactions.Custom"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:FluentAvalonia.UI.Controls"
    xmlns:viewModels="clr-namespace:CustomerDemo.ViewModels"
    d:DesignHeight="450"
    d:DesignWidth="800"
    x:CompileBindings="True"
    x:Name="root"
    x:DataType="viewModels:ClientsViewModel"
    mc:Ignorable="d">
    <Design.DataContext>
        <viewModels:ClientsViewModel />
    </Design.DataContext>
    
    <UserControl.Resources>
        <SolidColorBrush x:Key="TestBrush" Opacity="50" Color="#f1f1f1"/>
    </UserControl.Resources>

    <UserControl.Styles>
        
        <Style Selector="Button:pointerover /template/ ContentPresenter#PART_ContentPresenter">
            <Setter Property="BorderBrush" Value="Transparent" />
        </Style>
        
        <Style Selector="ScrollViewer">
            <Setter Property="AllowAutoHide" Value="True"/>
        </Style>
        
        <!-- <Style Selector="MenuItem"> -->
        <!--     <Setter Property="(Interaction.Behaviors)"> -->
        <!--         <BehaviorCollectionTemplate> -->
        <!--             <BehaviorCollection> -->
        <!--                 <iac:RoutedEventTriggerBehavior RoutedEvent="{x:Static InputElement.PointerEnteredEvent}"  -->
        <!--                                                 RoutingStrategies="Tunnel"> -->
        <!--                     <ia:ChangePropertyAction TargetObject="ClientsGrid"  -->
        <!--                                              PropertyName="SelectedItem" -->
        <!--                                              Value="{Binding}" /> -->
        <!--                 </iac:RoutedEventTriggerBehavior> -->
        <!--                 <iac:RoutedEventTriggerBehavior RoutedEvent="{x:Static InputElement.PointerExitedEvent}"  -->
        <!--                                                 RoutingStrategies="Tunnel"> -->
        <!--                     <ia:ChangePropertyAction TargetObject="ClientsGrid"  -->
        <!--                                              PropertyName="SelectedItem" -->
        <!--                                              Value="{x:Null}" /> -->
        <!--                 </iac:RoutedEventTriggerBehavior> -->
        <!--             </BehaviorCollection> -->
        <!--         </BehaviorCollectionTemplate> -->
        <!--     </Setter> -->
        <!-- </Style> -->
    </UserControl.Styles>

    <Grid
        ColumnDefinitions="108,*,108"
        RowDefinitions="84,Auto,24,Auto,24,*,84">
        <Grid 
            Grid.Row="1"
            Grid.Column="1"
            ColumnDefinitions="Auto,*,Auto,Auto">
            <TextBlock
                Grid.Column="0"
                Text="Clients"
                Theme="{StaticResource TitleTextBlockStyle}" />

            <Button
                Grid.Column="2"
                Click="ImportCsv_OnClick"
                Margin="0,0,12,0"
                Content="Import from CSV"
                FontWeight="SemiBold"/>
            
            <Button
                Grid.Column="3"
                Classes="accent"
                Click="AddClient_OnClick"
                Content="Add Client"
                FontWeight="SemiBold"/>
        </Grid>
        
        <StackPanel 
            Grid.Row="3"
            Grid.Column="1"
            Margin="0,0,0,0"
            Orientation="Horizontal">
            <TextBox
                Margin="0,0,20,0"
                Height="16"
                Width="248"
                Text="{Binding SearchText}"
                Watermark="Search clients" />
            
            <Label
                Margin="0,0,4,0"
                Background="{DynamicResource AccentButtonBackground}"
                Content="{Binding FilteredClients.Count}"
                CornerRadius="8"
                Height="20"
                FontSize="10"
                Foreground="{StaticResource AccentButtonForeground}"
                VerticalAlignment="Center"/>
            
            <Label 
                Content="clients found"
                Foreground="{DynamicResource TextFillColorTertiaryBrush}"
                VerticalAlignment="Center"/>
            
        </StackPanel>
        
        
        
        <DataGrid 
            Grid.Row="5" Grid.Column="1"
            Name="ClientsGrid"
            AutoGenerateColumns="False"
            Focusable="False"
            IsReadOnly="True"
            ItemsSource="{Binding FilteredClients}"
            RowHeight="42"
            SelectionChanged="DataGrid_SelectionChanged"
            SelectionMode="Single">
            
            <DataGrid.Styles>
                <Style Selector="DataGridCell">
                    <Setter Property="FontSize" Value="14"/>
                </Style>
                
                <Style Selector="DataGridColumnHeader">
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="FontWeight" Value="DemiBold"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                    <Setter Property="AreSeparatorsVisible" Value="False"/>
                </Style>
                <Style Selector="DataGridColumnHeader:pointerover">
                    <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorDark3}"/>
                </Style>
                <Style Selector="DataGridColumnHeader:pointerover /template/ Grid#PART_ColumnHeaderRoot">
                    <Setter Property="Background" Value="Transparent"/>
                </Style>
                
                        
                <Style Selector="DataGridRow:selected /template/ Rectangle#BackgroundRectangle">
                    <Setter Property="Fill" Value="{DynamicResource DataGridRowHoveredBackgroundColor}" />
                    <Setter Property="Opacity" Value="{DynamicResource DataGridRowSelectedHoveredBackgroundOpacity}"/>
                </Style>
                
            </DataGrid.Styles>
            
            <DataGrid.Resources>
                <MenuFlyout
                    x:Key="ClientMenuFlyout"
                    Placement="BottomEdgeAlignedRight"
                    ShowMode="TransientWithDismissOnPointerMoveAway" >
                    <MenuItem
                        Header="View"
                        CommandParameter="{Binding}"
                        PointerEntered="MenuFlyout_OnPointerEntered"
                        PointerExited="MenuFlyout_OnPointerExited" />
                    <MenuItem 
                        Header="Edit"
                        Click="EditMenuItem_OnClick"
                        CommandParameter="{Binding}"
                        PointerEntered="MenuFlyout_OnPointerEntered"
                        PointerExited="MenuFlyout_OnPointerExited" />
                    <Separator></Separator>
                    <MenuItem
                        Header="Delete"
                        Command="{ReflectionBinding #root.DataContext.DeleteClientCommand}"
                        CommandParameter="{Binding}"
                        Foreground="{DynamicResource SystemFillColorCriticalBrush}"
                        PointerEntered="MenuFlyout_OnPointerEntered"
                        PointerExited="MenuFlyout_OnPointerExited" />
                </MenuFlyout>
            </DataGrid.Resources>
            
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding FirstName}" Header="First Name" Width="*" />
                <DataGridTextColumn Binding="{Binding LastName}" Header="Last Name" Width="*"/>
                <DataGridTextColumn Binding="{Binding Email}" Header="Email" Width="*" />
                <DataGridTextColumn Binding="{Binding Phone}" Header="Phone" Width="*" />
                <DataGridTextColumn Binding="{Binding Address}" Header="Address" Width="*" />
                <DataGridTemplateColumn Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="viewModels:ClientsViewModel">
                            <Button 
                                Flyout="{StaticResource ClientMenuFlyout}"
                                ClipToBounds="True"
                                CornerRadius="15"
                                Margin="4,0,6,0"
                                Width="30">
                                <ui:SymbolIcon Symbol="ChevronDown" />
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>

</UserControl>
